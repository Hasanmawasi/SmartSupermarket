<div class="add-worker" <%= (form === "add") ? "" : "hidden" %>>
    <h2 class="form-title">Add Worker</h2>
    <form id="addWorkerForm" action="/manager/addAdmins" method="post">
      <!-- Generate ID Row -->
      <div class="form-row">
        <input type="text" id="generatedIdDisplay" placeholder="Generated ID" name="workerID" required>
        <button type="button" id="generateIdButton">Generate ID</button>
      </div>
      <!-- Generate Password Row -->
      <div class="form-row">
        <input type="text" id="generatedPasswordDisplay" placeholder="Generated Password" name="workerPassword" required>
        <button type="button" id="generatePasswordButton">Generate Password</button>
      </div>
      <div class="form-row">
        <!-- <label for="workerBranch">Select Branch:</label> -->
        <select class="form-select" id="workerBranch" name="workerBranch" required>
            <% locals.branches.forEach(branch => { %>
            <option value="<%= branch.branch_id %>"><%= branch.branch_id %></option>
            <% }) %>
        </select>
        
      </div>
      <!-- Vertical Form Fields -->
      <div class="vertical-form">
        <input type="text" id="firstName" name="firstName" placeholder="First Name" required>
        <input type="text" id="lastName" name="lastName" placeholder="Last Name" required>
        <input type="text" name="workerType" id="workerType" value="admin" aria-readonly="true">
        <input type="number" id="salary" name="salary" placeholder="Salary" required>
        <button type="submit">Add Admin</button>
      </div>
    </form>
  </div>


  <div class="worker-form" <%= (form === "view") ? "" : "hidden" %>>
    
    <div class="worker-image">
      <img src="<%= profileimg %>" alt="Worker Photo">
    </div>
    
    <form id="worker-details-form" action="/manager/updateAdminInfo" method="post">
      <div class="worker-detail">
        <label for="first-name">Name:</label>
        <input type="text" id="first-name" value="<%= locals.name %>" name="name" readonly>
      </div>
      <div class="worker-detail">
        <label for="worker-id">Admin ID:</label>
        <input type="text" id="worker-id" value="<%= locals.id %>" name="workerid" readonly>
      </div>
      <div class="worker-detail">
        <label for="worker-branch">Admin Branch:</label>
        <select id="worker-branch" class="form-select" name="adminbranch" disabled>
            <option value="<%= locals.branch %>" selected><%= locals.branch %></option>
            <% locals.branches.forEach(branch => { %>
                <option value="<%= branch.branch_id %>"><%= branch.branch_id %></option>
                <% }) %>
        </select>
      </div>
      <div class="worker-detail">
        <label for="salary">Salary:</label>
        <input type="number" id="salary" value="<%= locals.salary %>" name="salary" readonly >
      </div>
      <div class="worker-detail">
        <label for="work-type">Admin email:</label>
        <input type="text" id="work-email" value="<%= locals.email %>" name="email" readonly>
      </div>
      <div class="worker-detail">
        <label for="work-type">Admin Position:</label>
        <input type="text" id="work-type" value="<%= locals.position %>" name="type" readonly>
      </div>
     
      <div class="worker-actions">
        <button type="submit" id="save-btn" style="display: none;">Save</button>
        <button type="button" id="cancel-btn" style="display: none;">Cancel</button>
      </div>
    </form>
    <div class="form-header">
      <button class="edit-button" id="edit-btn">Edit</button>
      
      <!-- <button class="" >Delete</button> -->
      <button type="button" id="delete-btn" class="delete-button" data-bs-toggle="modal" data-bs-target="#deleteModal" >
        Delete
      </button>
    </div>
  </div>

  <%- include('../partials/adminPartials/adminModals.ejs', {
    ModalId: "deleteModal",
    ModalTitle: "Delete Worker",
    ModalBody: `Are you sure to delete "${locals.name}" ?`,
    ActionBoton: "Delete",
    formAction:`/manager/delete/${locals.id}`,
    formMethod:"POST"
  }) %>

  <script>
    // Generate unique ID
    // Initialize idCounter from localStorage or set it to 0 if not present
    let idCounter = parseInt(localStorage.getItem("idCounter")) || 0;

     document.getElementById("generateIdButton").addEventListener("click", () => {
    idCounter++;
    localStorage.setItem("idCounter", idCounter);
    const timestamp = Date.now();
    const workerId = `Admin-${idCounter}-${timestamp}`;
    document.getElementById("generatedIdDisplay").value = workerId;
});


    // Generate random password
    document.getElementById("generatePasswordButton").addEventListener("click", () => {
      const chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
      let password = "";
      for (let i = 0; i < 10; i++) {
        password += chars.charAt(Math.floor(Math.random() * chars.length));
      }
      document.getElementById("generatedPasswordDisplay").value = password;
    });

    // Handle form submission
    


    // ------------------------------------------------------------------------

    const editButton = document.getElementById("edit-btn");
    const deleteButton = document.getElementById("delete-btn");
    const saveButton = document.getElementById("save-btn");
    const cancelButton = document.getElementById("cancel-btn");
    const inputs = document.querySelectorAll("#worker-details-form input");
    const select = document.getElementById("worker-branch");
// Enable editing
editButton.addEventListener("click", () => {
  inputs.forEach(input => {
    if (input.id === "work-email" || input.id === "salary" || input.id === "work-type" || select.id==="worker-branch") {
      input.removeAttribute("readonly");
      select.removeAttribute("disabled");
      input.style.backgroundColor = "#ffffff";
    }
  });
  saveButton.style.display = "inline-block";
  cancelButton.style.display = "inline-block";
  editButton.style.display = "none";
});

// Cancel editing
cancelButton.addEventListener("click", () => {
  inputs.forEach(input => {
    input.setAttribute("readonly", "true");
    input.style.backgroundColor = "#e9ecef";
  });
  select.setAttribute("disabled", 'true');
  saveButton.style.display = "none";
  cancelButton.style.display = "none";
  editButton.style.display = "inline-block";
});

// Delete functionality (placeholder)
// deleteButton.addEventListener("click", () => {
//   if (confirm("Are you sure you want to delete this worker?")) {
//     alert("Worker deleted!");
//     // Add deletion logic here (e.g., API call)
//   }
// });

// Save functionality (placeholder)
// saveButton.addEventListener("click", (e) => {
//   // e.preventDefault();
//   alert("Changes saved!");
//   // Add update logic here (e.g., API call)
// });

  </script>